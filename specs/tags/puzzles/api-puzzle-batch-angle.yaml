get:
  operationId: apiPuzzleBatchSelect
  summary: Get multiple puzzles at once
  description: |
    Get a batch of random Lichess puzzles in JSON format.

    If authenticated, only returns puzzles that the user has never seen before.

    **DO NOT** use this endpoint to enumerate puzzles for mass download. Instead, download the [full public puzzle database](https://database.lichess.org/#puzzles).
  tags:
    - Puzzles
  security:
    - OAuth2: ["puzzle:read"]
  parameters:
    - in: path
      name: angle
      schema:
        type: string
        example: "mix"
      required: true
      description: |
        The theme or opening to filter puzzles with. Recommended: `mix`.

        Available themes are listed in [the lichess source code](https://github.com/ornicar/lila/blob/master/translation/source/puzzleTheme.xml) and [the lichess training themes hyperlinks](https://lichess.org/training/themes).
    - in: query
      name: difficulty
      required: false
      description: The desired puzzle difficulty, relative to the authenticated user puzzle rating, or 1500 if anonymous.
      schema:
        type: string
        enum:
          - easiest
          - easier
          - normal
          - harder
          - hardest
    - in: query
      name: nb
      description: |
        How many puzzles to fetch. Just set it to `1` if you only need one puzzle.
      schema:
        type: integer
        minimum: 1
        maximum: 50
        example: 10
        default: 15
      required: false
    - in: query
      name: color
      required: false
      description: |
        The color to play. Better left empty to automatically get 50% white.
        Currently only works when `nb=1`.
      schema:
        type: string
        enum:
          - white
          - black
  responses:
    "200":
      description: The requested puzzles.
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
            default: "'*'"
      content:
        application/json:
          schema:
            $ref: "../../schemas/PuzzleBatchSelect.yaml"
          example:
            $ref: "../../examples/puzzles-getPuzzleBatch.json"

post:
  operationId: apiPuzzleBatchSolve
  summary: Solve multiple puzzles at once
  description: |
    Set puzzles as solved and update ratings.
  tags:
    - Puzzles
  security:
    - OAuth2: ["puzzle:write"]
  parameters:
    - in: path
      name: angle
      schema:
        type: string
        example: "mix"
      required: true
      description: |
        The theme or opening of the solved puzzles.

        Available themes are listed in [the lichess source code](https://github.com/ornicar/lila/blob/master/translation/source/puzzleTheme.xml) and [the lichess training themes hyperlinks](https://lichess.org/training/themes).
    - in: query
      name: nb
      description: |
        When > 0, the response includes a new puzzle batch with that many puzzles.

        This is equivalent to calling [/api/puzzle/batch/{angle}](#tag/Puzzles/operation/apiPuzzleBatchSelect),
        and can sometimes save a request.
      schema:
        type: integer
        minimum: 0
        maximum: 50
        example: 1
        default: 0
      required: false
  requestBody:
    description: List of solved puzzles
    required: true
    content:
      application/json:
        schema:
          $ref: "../../schemas/PuzzleBatchSolveRequest.yaml"
  responses:
    "200":
      description: The solved puzzles, named `rounds`, and a new puzzle batch named `puzzles`.
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
            default: "'*'"
      content:
        application/json:
          schema:
            $ref: "../../schemas/PuzzleBatchSolveResponse.yaml"
          example:
            $ref: "../../examples/puzzles-getPuzzleBatch.json"
